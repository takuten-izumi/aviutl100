(1) カスタムオブジェクトからグラデーションエディタ(R)を選んで、設置する

(2) 使いたい色を設定の色という項目にどんどん追加していく

(3) 各色の透明度を設定する(0が不透過、100が透過)

(4) 色の位置を設定していく、0から初めて、徐々に大きくしていき、最後の色は100にする

(5) 最後に作ったグラデーションのIDを決める

(6) 例

赤、青、緑の三色にする場合は

色={0xff0000,0x0000ff,0x00ff00}
透明度={0,0,0}
位置={0,50,100}
とすれば、グラデーションの完成

(7) シフトを変えればばグラデーションが移動する

(8) 作ったグラデーションを適用させたいオブジェクトにアニメーション効果からグラデーション(R)を選ぶ

(9) 作ったグラデーションのIDとアニメーション効果のIDを同じ数値にすればグラデーションになります

(10) degreeで回転、blendで合成モードなど設定可能

(11) ただし、blendはAviUtlの仕様上、綺麗にはならず、表示されなかったりのエラーあり(※rikky_bmoduleを導入している場合は正しくかつ70種類まで指定可能)

(12) 横補正は回転に合わせてグラデーションの間隔が変わり、補正なしにするとlengthで設定した幅になります

グラデーションの色はGRADATION_ABC[gradation_ID].colによって取得することが可能です

color,alpha=GRADATION_ABC[gradation_ID].col(percent)のように使います

colorは0xRRGGBBの値、alphaは不透明度で0から1です

percentは0から100の間の数値を指定します

GRADATION_ABC[gradation_ID].posは各色の始まる位置が収められています

グラデーションはgradation_effect_Rによってオブジェクトに欠けることができます

gradation_effect_R(gradation_ID , degree , length , blend_ID [, targetbuffer , original_blend])のように使います

グラデーションのIDを指定すれば、そのグラデーションが使えます

長さを0にすると自動的に横幅にあわされます

合成モードは基本は0から12ですが、rikky_blendを導入していればさらに数が増やせます

rikky_moduleを導入していれば、[ ]内の引数は省略可能です

何処で使うのかを指定するのがtargetbufferで、フレームバッファならばfrm、仮想バッファならばtmpです

original_blendは直近で使用したobj.setoption("blend")で指定した合成モードの番号を指定するものです