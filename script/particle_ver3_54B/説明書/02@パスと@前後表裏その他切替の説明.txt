@パス
	外部ファイルのパス、つまり場所の情報を取得することができます
	@パスを使う場面は@出力や@テキスト、@画像、@挙動、@ファンネル、@立体物をつけたときです
	詳細は各項目の説明をご覧ください
	@パスは複数つけることが可能です

――トラックバー説明
	・パス番号とは外部ファイルのパスを取得したときに格納される場所の番号です

――参照説明
	・参照とは外部ファイルを指定するものです

――チェックボックス説明
	・単体とは@画像や@ファンネルで画像を表示するときにフォルダ内ファイルにするか、参照で選んだファイルだけにするかを決めるものです


@前後表裏その他切替
	放射するときの各表現を変えることができます

――トラックバー説明
	・前⇔後とは放射の順番を変えるものです
	└通常は0と同じです
	└0のときはあとから放射された破片が画面に対して手前になり、1のときは先に放射された破片が画面に対して手前になります

	・表裏(裏2とは破片に裏面と表面を設定することです
	└裏と表は二つのオブジェクトで表現するので、ただ単純に表裏(裏2をいじっても裏面は設定されません
	└通常は0と同じです
	└0のときはオブジェクトを表面設定して、1のときはオブジェクトを裏面設定にして、2のときはオブジェクトを裏面設定します
	└1と2の違いは、1は裏面のときに画像の向きが正面を向くようになり、2は裏面のとき画像の向きが裏面を向くようになります

	・表裏合成とは表裏(裏2で設定した裏面と表面を合成するものです
	└裏と表は二つのオブジェクトで表現するので、ただ単純に表裏合成をいじっても裏面は設定されません
	└乱数を合わせるために、二つのオブジェクトの@パーティクル本体のシードに同じマイナスの値を入力してください

	・回転表現とは回転計算の順序を変えるものです
	└通常は0と同じです
	└通常の回転変換は回転軸を傾けることなく、z軸、y軸、x軸の順番で回転変換が行われます
	└0以外だと回転の順番と回転軸が回転によって傾くので、より複雑に回転します
	└1のときはz軸、x軸、y軸の順番で回転変換させます
	└2のときはz軸、y軸、x軸の順番で回転変換させます
	└3のときはy軸、z軸、x軸の順番で回転変換させます
	└4のときはy軸、x軸、z軸の順番で回転変換させます
	└5のときはx軸、y軸、z軸の順番で回転変換させます
	└6のときはx軸、z軸、y軸の順番で回転変換させます
	└綺麗に見せるコツとして、すべての方向に回転速度をもうけないことです
	└2のときはxの回転速度を0にすると違いがよくわかります


――チェックボックス説明
	・書出時間短縮とは使えない意味のないものです

――設定説明
	・頻度逆転とは頻度の値の意味合いを逆転させるものです
	└通常は1秒間に放射される度合いを数値で決めますが、逆転すると破片一つが放射される時間を数値で決めるようになります
	└100のとき1秒に破片が一つ放射され、200のとき2秒で破片が一つ放射されます

	・逆再生とはオブジェクトの流れる時間を逆転させるものです

	・進行方向を向くとは破片のz方向の回転を進行方向に合わせるものです
	└現状進行方向のxy平面上におけるz方向の回転のみ対応しており、z方向に破片の進行方向があったとしてもxy平面上の向きを向きます
	└進行方向に向くように計算したあとに回転初期値や回転速度が加わりますので、純粋に進行方向だけを向かせる場合は回転初期値や回転速度は0にしてください

	・ゲームで遊ぶとはゲームで遊ぶことです
	└オブジェクトを充分長くしてから、再生ウインドウで再生すればゲームで遊べます
	└luaのグローバル変数を使っているので変数名がわかれば、チートのようなこともできるかと思われます
