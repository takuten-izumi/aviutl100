@出力
	出力位置を変えることができます

――トラックバー説明
	・数とはいろいろな数のことです
	└出力タイプが1と2と7のときは上部レイヤーを指定する数になります
	└出力タイプが3と4のときはアンカーの数になります
	└出力タイプが8のときはパス番号の指定する番号になります

	・出力タイプとは破片の出力位置の設定方法を決めるタイプのことです
	└タイプ1のときは、数で指定したオブジェクトを追跡するように破片が出力されます
	└例として@出力をつけたオブジェクトより一つ上のオブジェクトの動きを追う場合は数を1、二つ上ならば数を2のようにします
	└動きの元となるのは指定するオブジェクトのxyzのトラックバーの値なので、その他でオブジェクトを動かした場合はそれらは反映されません
	└動きを追うオブジェクトの長さ(時間)は@パーティクル本体をつけたオブジェクトと同じ長さ(時間)にしてください
	└タイプ2のときは、数で指定したオブジェクトを追跡するように破片が出力されます
	└例として@出力をつけたオブジェクトより一つ上のオブジェクトの動きを追う場合は数を1、二つ上ならば数を2のようにします
	└動きの元となるのは指定するオブジェクトのxyzのトラックバーの値なので、その他でオブジェクトを動かした場合はそれらは反映されません
	└動きを追うオブジェクトの長さ(時間)は@パーティクル本体をつけたオブジェクトと同じ長さ(時間)にしてください
	└タイプ3のときは、アンカーが数で指定した数値分だけ現れます
	└オプションの数値によって出力のされ方が変わります
	└オプションが0のときはアンカーが作るライン上から破片が出力されます
	└オプションが1のときはアンカーのポイントから破片が出力されます
	└タイプ4のときは、アンカーが数で指定した数値分だけ現れます
	└アンカーが作るライン上を走るように出力されます
	└タイプ5のときは、アンカーが二つ現れて立体的な箱状の空間を作りその空間内から破片が出力されます
	└タイプ6のときは、アンカーが二つ現れて立体的な球状の空間を作りその空間内から破片が出力されます
	└タイプ7のときは、数で指定したオブジェクトの領域内から破片が出力されます
	└境域を指定するオブジェクトの時間による位置や角度の変化は対応していますが、中心の位置やサイズや拡大率の変化は非対応です
	└動きの元となるのは指定するオブジェクトのxyzのトラックバーの値なので、その他でオブジェクトを動かした場合はそれらは反映されません
	└動きを追うオブジェクトの長さ(時間)は@パーティクル本体をつけたオブジェクトと同じ長さ(時間)にしてください
	└フィルター効果の発光が付いているオブジェクトを指定すると正しく動きません
	└タイプ8のときは、自作関数で設定した位置から破片が出力されます
	└@パスで自作関数を書いたファイルを取得して、取得したパス番号と数の数値を同じにします
	└自作関数とはユーザーが定義した出力位置を指定する関数のことです
	└関数の書き方は後述します
	└@パスの詳細は02@パスと@前後表裏その他切替の説明をご覧ください

	・値とは各タイプで用いるかもしれない値のことです
	└タイプ2のときは、指定するオブジェクトの速さにかける倍率になります
	└オプ2にチェックが入っているときのみ有効です
	└10で1倍、20で2倍、100で10倍です
	└タイプ4のときは、ライン上を走る速さになります
	└数値の秒単位で、値が1ならば、1秒でライン上を端から端まで移動し、3ならば、3秒で端から端まで移動します
	└タイプ5のときは、設定した出力空間内部にある非出力空間の拡大率になります
	└0のときは、出力空間全体で破片が出力され、100のときは、出力空間の側面だけから破片が出力されるようになります
	└タイプ6のときは、設定した出力空間内部にある非出力空間の拡大率になります
	└0のときは、出力空間全体で破片が出力され、100のときは、出力空間の側面だけから破片が出力されるようになります
	└タイプ7のときは、輪郭のしきい値になります

	・オプションとは出力に変化をつけるものです
	└タイプ1のときに、オプションが0のときは追跡するオブジェクトの進行方向が出力方向の基準になり、オプションが1のときは通常の出力方向が基準になります
	└タイプ2のときに、オプションが0のときは追跡するオブジェクトの進行方向が出力方向の基準になり、オプションが1のときは通常の出力方向が基準になります
	└タイプ3のときに、オプションが0のときはアンカーが作るライン上から破片が出力され、オプションが1のときはアンカーのポイントから出力されます
	└タイプ4のときに、オプションが0のときはアンカーが作るラインを走るように破片が出力され端まで来るといったんそこで途切れ、オプションが1のときはアンカー上を一周するように破片を出力します
	└タイプ5のときに、オプションが0のときは出力空間を非表示にして、オプションが1のときは出力空間を表示します
	└タイプ6のときに、オプションが0のときは出力空間を非表示にして、オプションが1のときは出力空間を表示します
	└タイプ7のときに、オプションが0のときは破片はそのままで、オプションが1のときは指定したオブジェクトの出力位置の色を破片の色にします
	└タイプ8のときに、オプションが0のときは@パスで取得したファイルに書かれた自作関数を使い、オプションが1のときはスクリプト制御に書かれた自作関数を使います

――チェックボックス説明
	・ライン合成とは出力タイプが3か4のときにアンカーの数を16以上設定したいときに使います
	└先につけた方のライン合成にチェックを入れて、@出力の下に新たな@出力をつけます
	└アンカーを追加したい分だけ新たにつけた@出力の数を変えます

――設定説明
	・オプ2とは出力に変化をつけるものです
	└タイプ1のときは、オプ2にチェックを入れると指定したオブジェクトが通過する場所からランダムで破片が出力されるようになります
	└タイプ2のときは、オプ2にチェックを入れると破片の出力速度に指定したオブジェクトの速度が加算されます
	└タイプ3のときは、オプションが0のときにオプ2にチェックを入れると同時発生数同士の出力位置が同じになります
	└タイプ3のときは、オプションが1のときにオプ2にチェックを入れると同時発生数同士がアンカーのポイントごとに分かれます
	└タイプ4のときは、オプ2にチェックを入れるとライン上を走るときに動きが滑らかになります
	└タイプ5のときは、オプ2にチェックを入れると同時発生数同士の出力位置が同じになります
	└タイプ6のときは、オプ2にチェックを入れると同時発生数同士の出力位置が同じになります
	└タイプ7のときは、オプ2にチェックを入れるとオブジェクトの移動方向が出力方向の基準になります

	・lineとはアンカーの位置のことです
	└アンカーを直接ドラッグして動かすか、数値を入力して設定できます

――自作関数説明
	・自作関数はxyz関数かxyzd関数で定義します
	└引数は破片が放射されるときの時間で、オブジェクト基準の時間です
	└時間の単位は秒です
	└戻り値は定義する関数によって異なります
	└xyz関数の戻り値は、x方向の位置、y方向の位置、z方向の位置の三つにします
	└xyzd関数の戻り値は、x方向の位置、y方向の位置、z方向の位置、xy出力方向の角度(ラジアン)、z出力方向の角度(ラジアン)の五つにします
	└ファイルで管理する場合は拡張子は.txtか.luaにしてください
	└ファイルを書き換えたり、変更した場合はAviutlのキャッシュを更新(F5を押)してください
	└自作関数は『媒介変数表示』や『曲線　変数』などで調べるといろいろ出てきます
	└例
	function xyz(t)
	local r=300
	local x=r*math.sin(math.pi*t*2)
	local y=r*math.cos(math.pi*t*2)
	local z=0
	return x,y,z
	end
	└上記の自作関数は1秒間半径300の円を描くように破片が出力されます
	└例
	function xyzd(t)
	local r=300
	local degxy=math.pi*t*2
	local degz=0
	local x=r*math.sin(degxy)
	local y=r*math.cos(degxy)
	local z=0
	degxy=degxy-math.pi
	return x,y,z,degxy,degz
	end
	└上記の自作関数は1秒間半径300の円を描くように破片が出力され、破片の出力方向は出力位置の法線方向です
